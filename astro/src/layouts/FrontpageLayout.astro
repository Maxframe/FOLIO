---
import "../styles/global.css";
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="de-CH">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta
      name="description"
      content="Website von Max Werner, Designer digitaler und interaktiver Medien."
    />
    <meta name="author" content="Max Werner" />
    <meta name="keywords" content="Portfolio, Max, Werner, Design, Code" />
    <meta name="generator" content={Astro.generator} />
    <title>Max Werner | {title}</title>
  </head>
  <body class="no-transition">
    <slot />
  </body>
</html>

<script>
  /* Switches Light/darkmode accordingly*/
  let mode = localStorage.getItem("mode");
  const modeSwitch = document.querySelectorAll(".modeswitch");

  const enableLightMode = () => {
    document.body.classList.add("lightmode");

    localStorage.setItem("mode", "light");
  };

  const enableDarkMode = () => {
    document.body.classList.remove("lightmode");

    localStorage.setItem("mode", "dark");
  };

  modeSwitch.forEach(function (e) {
    e.addEventListener("click", () => {
      mode = localStorage.getItem("mode");

      if (mode == "dark") {
        enableLightMode();
      } else if (mode == "light") {
        enableDarkMode();
      }
    });
  });

  if (mode == "light") {
    enableLightMode();
  }

  /* Disable Transition on oageload/refresh  */
  document.addEventListener("DOMContentLoaded", function () {
    let node = document.querySelector(".no-transition");
    node.classList.remove("no-transition");
  });

  /* Show/hide floating modeswitch */
  const heroModeSwitch = document.querySelector(".modeswitch-wrapper");
  const floatModeSwitch = document.querySelector(
    ".floating-modeswitch-wrapper"
  );

  const options = {};

  const heroObserver = new IntersectionObserver(function (
    entries,
    heroObserver
  ) {
    entries.forEach((entry) => {
      if (!entry.isIntersecting) {
        floatModeSwitch.classList.add("show-float");
      } else {
        floatModeSwitch.classList.remove("show-float");
      }
    });
  }, options);

  heroObserver.observe(heroModeSwitch);
</script>
