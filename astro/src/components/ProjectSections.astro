---
import ImageBuilder from "./ImageBuilder.astro";
import { PortableText } from "astro-portabletext";

export interface Props {
  sectionContent: any;
}
const { sectionContent } = Astro.props as Props;
---

{
  sectionContent._type === "sectionImageSingle" ? (
    <div class="single-image-section">
      <div
        class="single-image-wrapper"
        style={{
          gridColumnStart: `calc(${sectionContent.imageSettings.gridBegin} * 2 - 1)`,
          gridColumnEnd: `calc(${sectionContent.imageSettings.gridEnd} * 2 - 1)`,
        }}
      >
        <div class="image-wrapper">    
        <ImageBuilder
          cls="single-image"
          source={sectionContent.sImage.asset._ref}
          alt={sectionContent.altText}
        />
        </div>  
        {sectionContent.captionText && (
        <p class="caption-text">{sectionContent.captionText}</p>
        )}
      </div>
    </div>
  ) : (
    ""
  )
}
{
  sectionContent._type === "sectionImageDouble" ? (
    <div class="double-image-section">
      <div class="double-image-wrapper image-wrapper"
      style={{
        gridColumnStart: `calc(${sectionContent.gridBeginLeft} * 2 - 1)`,
        gridColumnEnd: `calc(${sectionContent.gridEndLeft} * 2 - 1)`,
      }}>
        <ImageBuilder
          cls="double-image double-image-left"
          source={sectionContent.dImageLeft.asset._ref}
          alt={sectionContent.altTextLeft}
        />
      </div>
      <div class="double-image-wrapper image-wrapper"
      style={{
        gridColumnStart: `calc(${sectionContent.gridBeginRight} * 2 - 1)`,
        gridColumnEnd: `calc(${sectionContent.gridEndRight} * 2 - 1)`,
      }}>
        <ImageBuilder
          cls="double-image double-image-right"
          source={sectionContent.dImageRight.asset._ref}
          alt={sectionContent.altTextRight}
        />
      </div>
    </div>
  ) : (
    ""
  )
}
{
  sectionContent._type === "sectionText" ? (
    <div class="text-section">
      {sectionContent.rightToLeft ? (
      <h3
          class="text-section-title rtl-title"
          style={{
            gridColumnStart: `span 3`,
            gridColumnEnd: `calc(${sectionContent.textGridPos} * 2 + 7)`,
          }}
        >
        {sectionContent.sectionTitle}
      </h3>
      <div
        class="text-section-text block-wrapper rtl-text"
        style={{
          gridColumnStart: `calc(${sectionContent.textGridPos} * 2 - 4)`,
          gridColumnEnd: `span 8`,
        }}
      >
        <PortableText value={sectionContent.sectionText} />
      </div>
      ) : (<h3
        class="text-section-title"
        style={{
          gridColumnStart: `span 3`,
          gridColumnEnd: `calc(${sectionContent.textGridPos} * 2 - 1)`,
        }}
      >
        {sectionContent.sectionTitle}
      </h3>
      <div
        class="text-section-text block-wrapper"
        style={{
          gridColumnStart: `calc(${sectionContent.textGridPos} * 2 - 1)`,
          gridColumnEnd: `span 8`,
        }}
      >
        <PortableText value={sectionContent.sectionText} />
      </div>
      )}
      
    </div>
  ) : (
    ""
  )
}

<style lang="scss">
  /* define:vars={{ textGridPos, sImageGridBegin, sImageGridEnd }} */
  .text-section {
    display: grid;
    grid-template-columns: repeat(18, 1fr);
    grid-template-rows: auto;
    column-gap: var(--project-grid-gap);

    .text-section-title {
      text-align: right;
      text-transform: uppercase;
      font-size: 0.8rem;
      font-weight: 700;
      color: rgb(var(--c-fg),0.6);
      letter-spacing: 0.06rem;
      margin-top: 0.5rem;
    }

    .text-section-text {
      font-size: var(--step-1);
      font-weight: 500;
    }
    .rtl-text {
      text-align: right;
      grid-column-start: calc(var(--textGridPos) * 2 - 1);
    }

    .rtl-title {
      text-align: left;
      grid-row-start: 1;
    }
  }

  .single-image-section {
    display: grid;
    grid-template-columns: repeat(18, 1fr);
    grid-template-rows: auto;
    grid-column: 1 / var(--project-grid-nr);
    column-gap: var(--project-grid-gap);

    

    .caption-text {
      text-align: center;
      padding-top: 0.5rem;
    }
  }

  .double-image-section {
    display: grid;
    grid-template-columns: repeat(18, 1fr);
    grid-template-rows: auto;
    column-gap: var(--project-grid-gap);
   
    .double-image-wrapper {
      height: fit-content;
    }

  }

  .image-wrapper {
    overflow: hidden;
  }

  @media only screen and (max-width: 800px) {

    .text-section {
      .text-section-text,
      .text-section-title {
        grid-column: -3 / 3 !important;
        text-align: left;
      }
    }
    
    
    .single-image-section {
      .single-image-wrapper {
        grid-column: -3 / 3 !important;
      }
    }

    .double-image-section {
      row-gap: var(--project-sections-gap);
      .double-image-wrapper {
        grid-column: -3 / 3 !important;
      }
    }
  }
</style>
