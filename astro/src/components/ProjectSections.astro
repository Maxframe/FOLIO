---
import ImageBuilder from "./ImageBuilder.astro";
import { PortableText } from "astro-portabletext";

export interface Props {
  sectionContent: any;
}
const { sectionContent } = Astro.props as Props;

const textGridPos = sectionContent.textGridPos;
---

<div class="section-wrapper">
  <!-- {
    sectionContent._type === "sectionImageSingle" ? (
      <>
        <ImageBuilder
          cls="single-image"
          source={sectionContent.sImage.asset._ref}
          alt={sectionContent.altText}
          w={500}
          h={500}
        />
        <p>{sectionContent.imageSettings.gridBegin}</p>
        <p>{sectionContent.imageSettings.gridEnd}</p>
        <p>{sectionContent.imageSettings.maxHeight}</p>
      </>
    ) : (
      ""
    )
  }
  {
    sectionContent._type === "sectionImageDouble" ? (
      <>
        <ImageBuilder
          cls="double-image"
          source={sectionContent.dImageUpload.dImageLeft.asset._ref}
          alt={sectionContent.dImageUpload.altTextLeft}
          w={500}
          h={500}
        />
        <ImageBuilder
          cls="double-image"
          source={sectionContent.dImageUpload.dImageRight.asset._ref}
          alt={sectionContent.dImageUpload.altTextRight}
          w={500}
          h={500}
        />
        <p>{sectionContent.captionText}</p>
        <p>{sectionContent.imageSettings.gridBegin}</p>
        <p>{sectionContent.imageSettings.gridEnd}</p>
        <p>{sectionContent.imageSettings.maxHeight}</p>
      </>
    ) : (
      ""
    )
  } -->
  {
    sectionContent._type === "sectionText" ? (
      <div class="text-section">
        <h3 class="text-section-title">{sectionContent.sectionTitle}</h3>
        <div class="text-section-text block-wrapper">
          <PortableText value={sectionContent.sectionText} />
        </div>
      </div>
    ) : (
      ""
    )
  }
</div>
<style lang="scss" define:vars={{ textGridPos }}>
  .text-section {
    display: grid;
    grid-template-columns: repeat(18, 1fr);
    grid-template-rows: auto;
    grid-column: 1 / var(--project-grid-nr);
    column-gap: var(--project-grid-gap);

    .text-section-title {
      grid-column-start: span 2;
      grid-column-end: calc(var(--textGridPos) * 2 - 1);
      text-align: right;
      text-transform: uppercase;
      font-size: 0.8rem;
      font-weight: 700;
      color: var(--c-lighter-text);
      letter-spacing: 0.06rem;
    }

    .text-section-text {
      grid-column-start: calc(var(--textGridPos) * 2 - 1);
      grid-column-end: span 7;
    }
  }
</style>
