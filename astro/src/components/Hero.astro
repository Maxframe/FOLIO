---
import "../styles/global.css";
import { useSanityClient } from "@sanity/astro";

const heroData = await useSanityClient().fetch(`*[_type == 'hero'][0]{
  heroText {
    title,
    titleSpecial,
    subtitle,
    subtitleSpecial
  }
}`)
const title = heroData.heroText.title;
const titleSpecial = heroData.heroText.titleSpecial;
const subtitle = heroData.heroText.subtitle;
const subtitleSpecial = heroData.heroText.subtitleSpecial;
---

  <div class="hero-container">
    <h1>
      <span class="title highlight">{titleSpecial}</span>
      <span class="title">{title}</span><br>
      <span class="sub">{subtitle}</span>
      <span class="sub hidden">{subtitleSpecial}</span>
    </h1>

    <div class="switchmode-wrapper">
      <label class="switchmode" for="checkbox">
        <input type="checkbox" id="checkbox" />
        <div class="slider round">
          <div class="slidee round">
            <div class="arrow-wrapper">
              <svg width="21" height="38" viewBox="0 0 21 38" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M4.32182 35.4846L18.6959 20.1072C19.2785 19.484 19.2785 18.516 18.6959 17.8928L4.32182 2.51544C3.31729 1.4408 1.5159 2.15164 1.5159 3.62267L1.5159 34.3773C1.5159 35.8484 3.3173 36.5592 4.32182 35.4846Z" />
              </svg>
            </div>
          </div>
        </div>
      </label>
    </div>
  </div>

<style lang="scss">
  .hero-container {
    position: relative;
    display: flex;
    height: calc(100dvh - var(--featured-offset));
    height: calc(100vh - var(--featured-offset));
    min-height: calc(100vh var(--featured-offset));
    gap: 4rem;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 30px;
    
    h1 {
      position: relative;
      transition: color var(--switchmode-transition-time);
      max-width: 35rem;
      margin-top: 0;
      color: var(--c-fg);
      user-select: none;
      text-align: center;
      line-height: 1.2;
      
      .title {
        font-size: var(--step-4);
      }
      
      .highlight {
        color: var(--clr-accent);
      }
      
      .sub {
        font-size: var(--step-1);
        font-weight: 500;
        font-family: monospace;
      }

      .hidden {
        position: relative;
        color: var(--clr-wb-dark);
        font-weight: 700;
        font-family: "Manrope", sans-serif;
      }
      
      
    }
  }
  body.lightmode .hero-container .hidden {

    &::after {
      position: absolute;
      content: "";
      bottom: 0;
      left:  1.4rem;
      right: 0;
      bottom: -0.4rem;
      height: 6px;
      background-color: var(--clr-accent);
      width: calc(100% - 1.4rem);
      transform: scaleX(0);
      transform-origin: bottom right;
      transition: transform var(--switchmode-transition-time) ease;
    }
    &:hover::after {
      transform: scaleX(1);
      transform-origin: bottom left;

      }

      &:hover {
        cursor: help;
      }
    }
  
  




/* Mode Switcher */
  .switchmode-wrapper {
    display: flex;
    align-items: center;
  }
  .switchmode {
    display: inline-block;
    position: relative;
    width: var(--switchmode-w);
    height: var(--switchmode-h);
    transition: 0.4s;
    input {
      display: none;
    }
  }


  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    outline: solid 0.2rem var(--c-stroke);
    background-color: var(--clr-wb-light20);
    transition: var(--switchmode-transition-time);

    .slidee {
      position: absolute;
      transform-origin: center;
      transform: translate(-50%, 0%) rotate(0deg);
      background-color: var(--clr-wb-light);
      height: calc(var(--switchmode-h) - var(--switchmode-slider-dist));
      width: calc(var(--switchmode-h) - var(--switchmode-slider-dist));
      top: calc(var(--switchmode-slider-dist) / 2);
      left: calc(var(--switchmode-h) / 2);
      outline: solid 0.2rem var(--c-stroke);
      transition: var(--switchmode-transition-time);
    }

    .arrow-wrapper {
      width: 100%;
      height: 100%;
      transform: rotate(0deg); 
transition: 0.7s cubic-bezier(.11,.61,.36,1.22);
      svg {
        position: absolute;
        transform-origin: center;
        transform: translate(calc(-50% + 5px), 0%);
        width: 38%;
        height: 100%;
        left: 50%;
        fill: var(--clr-wb-dark20);
        stroke: var(--c-stroke);
        stroke-width: 0.1rem;
        transition: var(--switchmode-transition-time);
      }
    } 
  }

  .round {
    border-radius: 999rem;
  }


  input:checked + .slider {
    outline: solid 0.2rem var(--c-stroke);
  }

  input:checked + .slider .slidee {
    left: calc(var(--switchmode-w) - var(--switchmode-h) / 2);
    outline: solid 0.2rem var(--c-stroke);
    transform: translate(-50%,0%);

  }

  input:checked + .slider .slidee .arrow-wrapper {
   transform: rotate(180deg);
  }

  .round {
    border-radius: 999rem;
  }

</style>
