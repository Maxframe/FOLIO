---
import { useSanityClient } from "@sanity/astro";
export interface Props {
  currentSlug: string;
}

const { currentSlug } = Astro.props as Props;

const allProjectData = await useSanityClient().fetch(
  `*[_type == 'projectsSection'][0]{projectsFeatured[]->{
        projectName,
        "slug": slug.current,
    }
}`
);

let nextProjectSlug = "";
let nextProjectTitle = "";
if (allProjectData.projectsFeatured) {
  const currentIndex = allProjectData.projectsFeatured.findIndex(
    (project: any) => project.slug === currentSlug
  );
  const nextIndex = (currentIndex + 1) % allProjectData.projectsFeatured.length;
  nextProjectSlug = allProjectData.projectsFeatured[nextIndex]?.slug;
  nextProjectTitle = allProjectData.projectsFeatured[nextIndex]?.projectName;
}
---

{
  nextProjectSlug && (
    <div class="wrapper">
      <a class="next-project-button" href={"/" + nextProjectSlug}>
        <svg
          width="89"
          height="42"
          viewBox="0 0 89 42"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path d="M47.9646 36.4204C46.0293 38.2803 42.9707 38.2803 41.0354 36.4204L14.9539 11.3551C11.7075 8.23514 13.916 2.75 18.4185 2.75L70.5815 2.75001C75.0841 2.75001 77.2925 8.23514 74.0461 11.3551L47.9646 36.4204Z" />
        </svg>
        <span>NÃ¤chstes Projekt</span>
      </a>
    </div>
  )
}

<style lang="scss">
  .wrapper {
    margin: 2rem auto 0;
    padding: 0 var(--content-px);
    width: fit-content;
    .next-project-button {
      display: flex;
      flex-direction: column;
      align-items: center;
      width: 100%;
      max-width: 20rem;
      font-size: var(--step-2);
      font-weight: 600;
      background-color: var(--c-bg);
      padding: 2rem;
      border: solid var(--stroke-w) var(--c-stroke);
      border-radius: var(--project-sm-radius);
      text-align: center;

      &:hover span {
        color: rgb(var(--clr-accent));
      }

      span {
        transition: 0.2s ease-out;
      }
      svg {
        fill: rgb(var(--clr-wb-light));
        stroke: var(--c-stroke);
        stroke-width: 3.5px;
        stroke-linecap: round;
      }
    }
  }
</style>
