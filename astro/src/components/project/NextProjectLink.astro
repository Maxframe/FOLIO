---
import { sanityClient } from "sanity:client";
import { urlFor } from "../../utils/urlForImage";

export interface Props {
  currentSlug: string;
}

const { currentSlug } = Astro.props as Props;

const allProjectData = await sanityClient.fetch(
  `*[_type == 'projectsSection'][0]{projectsFeatured[]->{
        projectName,
        "slug": slug.current,
        "thumbnailImage": thumbnailImage.image.asset._ref,
        "lqip": thumbnailImage.image.asset->metadata.lqip,
        "ratio": thumbnailImage.image.asset->metadata.dimensions.aspectRatio,
    }
}`
);

let nextProjectSlug = "";
let nextProjectTitle = "";
let nextThumbnailImage = "";
if (allProjectData.projectsFeatured) {
  const currentIndex = allProjectData.projectsFeatured.findIndex(
    (project: any) => project.slug === currentSlug
  );
  const nextIndex = (currentIndex + 1) % allProjectData.projectsFeatured.length;
  nextProjectSlug = allProjectData.projectsFeatured[nextIndex]?.slug;
  nextProjectTitle = allProjectData.projectsFeatured[nextIndex]?.projectName;
  nextThumbnailImage =
    allProjectData.projectsFeatured[nextIndex]?.thumbnailImage;
}
---

{
  nextProjectSlug && (
    <div class="next">
      <a class="next__project-button" href={"/" + nextProjectSlug}>
        <div class="next__image-wrapper">
          <img
            class="image--next"
            src={urlFor(nextThumbnailImage)
              .auto("format")
              .fit("clip")
              .width(320)
              .url()}
            alt={nextProjectTitle}
            loading="lazy"
          />
        </div>
        <svg
          width="89"
          height="42"
          viewBox="0 0 89 42"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path d="M47.9646 36.4204C46.0293 38.2803 42.9707 38.2803 41.0354 36.4204L14.9539 11.3551C11.7075 8.23514 13.916 2.75 18.4185 2.75L70.5815 2.75001C75.0841 2.75001 77.2925 8.23514 74.0461 11.3551L47.9646 36.4204Z" />
        </svg>
        <span class="next__project-title">{nextProjectTitle}</span>
        <span class="next__project-string">NÃ¤chstes Projekt</span>
      </a>
    </div>
  )
}

<style lang="scss">
  .next {
    padding: 0 var(--content-px);
    .next__project-button {
      margin: 2rem auto 0;
      position: relative;
      display: flex;
      flex-direction: column;
      align-items: center;
      width: fit-content;
      font-size: var(--step-2);
      font-weight: 600;
      background-color: rgb(var(--c-bg));
      padding: 2rem;
      border: solid var(--stroke-w) rgb(var(--c-stroke));
      border-radius: var(--project-sm-radius);
      border-radius: var(--sm-radius);
      text-align: center;
      overflow: hidden;
      transition:
        background-color var(--modeswitch-transition-time),
        box-shadow var(--hover-transition),
        border var(--modeswitch-transition-time);

      &:hover {
        .next__project-title {
          color: rgb(var(--clr-accent));
        }
        .next__image-wrapper {
          opacity: 1;
        }
      }

      .next__image-wrapper {
        position: absolute;
        opacity: 0;
        inset: 0;
        transition: opacity 0.2s ease-out;
        background-color: rgb(var(--c-stroke));
        border-radius: var(--sm-radius);

        &::after {
          content: "";
          position: absolute;
          inset: 0;
          background: linear-gradient(
            0deg,
            rgb(var(--c-bg)) 0%,
            rgb(var(--c-bg) / 0.8) 100%
          );
          transition: background var(--modeswitch-transition-time);
        }
      }
      .next__project-string {
        color: rgb(var(--c-fg));
        transition: var(--hover-transition);
        z-index: 2;
        text-transform: uppercase;
        letter-spacing: 0.06rem;
        font-weight: 700;
        font-size: 0.75rem;
      }
      .next__project-title {
        transition: var(--hover-transition);
        z-index: 2;
      }
      svg {
        transition: stroke var(--modeswitch-transition-time);
        fill: rgb(var(--clr-wb-light));
        stroke: rgb(var(--c-stroke));
        stroke-width: 3.5px;
        stroke-linecap: round;
        z-index: 2;
      }
    }
  }

  body.lightmode .next__project-button {
    box-shadow: 5px 5px 0 2px rgb(var(--c-stroke));

    &:hover {
      box-shadow: 8px 8px 0 2px rgb(var(--c-stroke));
    }
  }

  @media only screen and (width <= 800px) {
    .next .next__project-button .next__image-wrapper {
      opacity: 1;
    }
  }
</style>
