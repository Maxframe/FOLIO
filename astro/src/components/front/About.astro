---
import { sanityClient } from "sanity:client";
import ImageBuilder from "../utils/ImageBuilder.astro";
import { PortableText } from "astro-portabletext";

const aboutData = await sanityClient.fetch(`*[_type == 'about'][0]{
  aboutTitle,
  "slug": slug.current,
  
  "image": aboutImage.image.asset._ref,
  "lqip": aboutImage.image.asset->metadata.lqip,
  "ratio": aboutImage.image.asset->metadata.dimensions.aspectRatio,
  "alt": aboutImage.alt,


  aboutText,
  aboutTextBlock,
  
  "mailLinkLabel": contactLinks.mailLinkLabel,
  "mailLink": contactLinks.mailLink,
  "addLinksLabel": contactLinks.addLinksLabel,
  contactLinks {
    addLinks[] {
      contactLink,
      contactName,
      contactType,
    } 
  },

  "cvFile": cvFile.asset->url,
  "cvText": cvFile.cvText,
}`);
---

<section class="about-section" id={aboutData.slug}>
  <div class="about-wrapper">
    <div class="about-image-wrapper">
      <ImageBuilder
        cls="about-image"
        source={aboutData.image}
        alt={aboutData.alt}
        lqip={aboutData.lqip}
        ratio={aboutData.ratio}
        w={500}
      />
    </div>
    <div class="about-text">
      <h1 class="about-title">{aboutData.aboutTitle}</h1>
      <div class="about-description block-wrapper">
        <PortableText value={aboutData.aboutTextBlock} />
      </div>
    </div>
    <div class="about-mail-label about-label">
      <span>{aboutData.mailLinkLabel}</span>
    </div>
    <div class="about-mail">
      <button class="mail-button" id="mailButton">
        <span class="mail-text" id="mailText">{aboutData.mailLink}</span>
        <svg viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M0 4C0 1.79086 1.79086 0 4 0H20.7059C22.915 0 24.7059 1.79086 24.7059 4V6.70588C24.7059 7.81045 23.8105 8.70588 22.7059 8.70588C21.6013 8.70588 20.7059 7.81045 20.7059 6.70588L20.7059 4L4 4V20.7059H6.70588C7.81045 20.7059 8.70588 21.6013 8.70588 22.7059C8.70588 23.8105 7.81045 24.7059 6.70588 24.7059H4C1.79086 24.7059 0 22.915 0 20.7059V4Z"
            fill="#F6F6F6"></path>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M11.2941 15.2941C11.2941 13.085 13.085 11.2941 15.2941 11.2941H32C34.2091 11.2941 36 13.085 36 15.2941V32C36 34.2091 34.2091 36 32 36H15.2941C13.085 36 11.2941 34.2091 11.2941 32V15.2941ZM32 15.2941L15.2941 15.2941V32H32V15.2941Z"
            fill="#F6F6F6"></path>
        </svg>
      </button>
      <span class="mail-tooltip" id="mailTooltip">Mail kopieren</span>
    </div>
    <div class="about-social-label about-label">
      <span>{aboutData.addLinksLabel}</span>
    </div>
    <div class="about-social-wrapper">
      {
        aboutData.contactLinks.addLinks?.map((link: any) => (
          <div class="about-social">
            <a
              class="about-social-link"
              href={link.contactLink}
              target="_blank"
            >
              {link.contactName}
            </a>
          </div>
        ))
      }
    </div>
    <a
      class="about-cv"
      href={aboutData.cvFile + "?dl="}
      data-umami-event="CV button"><span>{aboutData.cvText}</span></a
    >
  </div>
</section>

<style lang="scss">
  .about-section {
    max-width: var(--content-w);
    margin: 0 auto;
    padding: 0 var(--content-px);
    padding-top: calc(var(--nav-height) + var(--about-img-offset));

    overflow-x: hidden;
  }

  .about-wrapper {
    position: relative;
    display: grid;
    grid-template-columns: 2fr 3fr;
    margin-left: 3rem;
    padding: 2rem;
    background-color: rgb(var(--clr-wb-light), 0.15);
    border-radius: 3rem;
    border: solid var(--stroke-w) rgb(var(--c-stroke));
    transition:
      background-color var(--modeswitch-transition-time),
      border var(--modeswitch-transition-time);
    column-gap: 5%;
    row-gap: 1rem;
  }

  .about-image-wrapper {
    transform: translate(
      calc((var(--about-img-offset) * -1) - var(--stroke-w)),
      calc(var(--about-img-offset) * -1)
    );
    width: calc(100% + var(--about-img-offset));
    border-radius: var(--md-radius);
    overflow: hidden;
    height: fit-content;
    outline: solid var(--stroke-w) rgb(var(--c-stroke));
    transition: outline var(--modeswitch-transition-time);
  }

  .about-title {
    font-size: var(--step-3);
    transition: color var(--modeswitch-transition-time);
    margin-bottom: 0.5rem;
  }

  .about-social-wrapper {
    transition: color var(--modeswitch-transition-time);

    a {
      font-weight: 600;
      color: rgb(var(--c-fg));
      &:hover {
        color: rgb(var(--clr-accent));
      }
    }
  }

  .about-mail {
    width: fit-content;
    position: relative;

    .mail-button {
      display: flex;
      border: inherit;
      font-family: inherit;
      color: inherit;
      background-color: inherit;
      cursor: pointer;
      align-items: center;
      column-gap: 0.5rem;
      .mail-text {
        user-select: text;
        line-height: 1;
        font-weight: 600;
        font-size: var(--step-2);
        transition:
          color var(--hover-transition),
          filter var(--hover-transition);
      }
      svg {
        width: 22px;
        transform: translateY(3px);
        path {
          transition:
            fill var(--hover-transition),
            filter var(--hover-transition);
          fill: rgb(var(--c-fg));
        }
      }
      &:hover {
        .mail-text {
          filter: brightness(0.7);
          color: rgb(var(--clr-accent), 0.8);
        }

        svg path {
          filter: brightness(0.7);
          fill: rgb(var(--clr-accent), 0.8);
        }

        ~ .mail-tooltip {
          opacity: 1;
        }
      }
    }

    .mail-button.active:hover {
      .mail-text {
        filter: brightness(1);
      }

      svg path {
        filter: brightness(1);
      }
    }

    .mail-tooltip {
      opacity: 0;
      pointer-events: none;
      position: absolute;
      top: 50%;
      right: 0;
      text-align: center;
      color: rgb(var(--c-fg));
      padding: 0.5rem 0;
      width: 8rem;
      background-color: var(--c-pill-bg);
      border-radius: 999px;
      backdrop-filter: blur(20px);
      border: solid var(--stroke-w) rgb(var(--c-stroke));
      transform: translate(calc(100% + 1rem), -50%);
      transition: opacity var(--modeswitch-transition-time);
    }
  }

  .about-label {
    text-align: right;
    margin-top: 0.1rem;
    span {
      text-transform: uppercase;
      font-size: 0.8rem;
      font-weight: 700;
      color: rgb(var(--c-fg), 0.6);
      letter-spacing: 0.06rem;
      margin-top: 0.5rem;
      transition: color var(--modeswitch-transition-time);
    }
  }

  .about-social-link {
    font-size: var(--step-0);
  }

  .about-cv {
    text-align: center;
    font-weight: 600;
    grid-column: 1 / span 2;
    color: rgb(var(--c-fg));
    padding: 1rem 1.4rem;
    background-color: var(--c-pill-bg);
    border-radius: 999px;
    border: solid var(--stroke-w) rgb(var(--c-stroke));
    transition:
      color var(--modeswitch-transition-time),
      background-color var(--modeswitch-transition-time),
      transform var(--hover-transition),
      border var(--modeswitch-transition-time);

    &:hover {
      background-color: rgb(var(--c-bg));
      color: rgb(var(--clr-accent));
      transform: scale(1.03);
    }
  }

  @media screen and (max-width: 800px) {
    .about-wrapper {
      grid-template-columns: 1fr;
      grid-template-rows: 1fr;
      row-gap: 2rem;
      margin-left: calc(var(--card-offset) * -1);
      width: calc(100% + var(--card-offset) * 2);

      & > * {
        grid-column: auto;
        grid-row: auto;
      }
      .about-image-wrapper {
        transform: translate(0);
        margin: -6rem auto 0;
        display: flex;
        justify-content: center;
        max-width: 22rem;
        width: 100%;
      }

      .about-label {
        display: none;
      }

      .about-mail {
        width: 100%;

        .mail-tooltip {
          top: 0;
          right: unset;
          left: 50%;
          transform: translate(-50%, calc(-100% - 0.4rem));
        }
      }
    }
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    let text: string,
      mailButton: HTMLElement,
      toolTip: HTMLElement,
      toolTipText: string;

    if (document.getElementById("mailText")) {
      text = document.getElementById("mailText").innerHTML;
    }
    if (document.getElementById("mailButton")) {
      mailButton = document.getElementById("mailButton");
    }
    if (document.getElementById("mailTooltip")) {
      toolTip = document.getElementById("mailTooltip");
      toolTipText = toolTip.innerHTML;
    }

    const copyContent = async () => {
      if (!text || !toolTip) return;

      try {
        await navigator.clipboard.writeText(text);
        toolTip.innerHTML = "Mail kopiert";
      } catch (err) {
        toolTip.innerHTML = "Irgendwas ist falsch gelaufen";
      }
      if (mailButton) mailButton.classList.add("active");
    };

    const resetTooltip = () => {
      if (mailButton) mailButton.classList.remove("active");
      if (toolTip) setTimeout(() => (toolTip.innerHTML = toolTipText), 200);
    };

    if (mailButton) {
      mailButton.addEventListener("click", copyContent);
      mailButton.addEventListener("mouseout", resetTooltip);
    }
  });
</script>
