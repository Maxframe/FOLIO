---
import { sanityClient } from "sanity:client";
import ImageBuilder from "../utils/ImageBuilder.astro";

const fProjectsData =
  await sanityClient.fetch(`*[_type == 'projectsSection'][0]{
    heading,
    "slug": slug.current,
    projectsFeatured[]->{
        projectName,
        subtitle,
        "slug": slug.current,
        "thumbnailImage": thumbnailImage.image.asset._ref,
        "thumbAltText": thumbnailImage.alt,
        "lqip": thumbnailImage.image.asset->metadata.lqip,
        "ratio": thumbnailImage.image.asset->metadata.dimensions.aspectRatio,
    }  
}`);
---

<section class="featured" id={fProjectsData.slug}>
  <h2 class="featured__title">{fProjectsData.heading}</h2>
  <ul class="featured__projects-wrapper">
    {
      fProjectsData.projectsFeatured?.map((project: any, index: number) => (
        <li>
          <a href={project.slug} class="card" aria-labelledby={project.slug}>
            <div class="card__image-wrapper">
              <div class="card__image-overlay" />
              <ImageBuilder
                cls="image--thumbnail"
                source={project.thumbnailImage}
                lqip={project.lqip}
                alt={project.thumbAltText}
                w={1000}
                loading={index === 0 ? "eager" : "lazy"}
              />
            </div>
            <div class="card__text" id={project.slug}>
              <h3 class="card__text--title">{project.projectName}</h3>
              <p class="card__text--subtitle">{project.subtitle}</p>
            </div>
          </a>
        </li>
      ))
    }
  </ul>
</section>

<style lang="scss">
  .featured {
    max-width: var(--content-w);
    margin: 0 auto;
    padding: 0 2rem;
    margin-bottom: 10rem;
    .featured__title {
      font-size: var(--step-3);
      padding-top: var(--nav-height);
      margin-top: calc(var(--nav-height) * -1);
      margin-bottom: 1rem;
      margin-left: 1rem;
      transition: color 200ms ease-out;
    }
  }

  .featured__projects-wrapper {
    display: flex;
    flex-direction: column;
    gap: var(--card-gap);
    width: 100%;

    .card {
      display: block;
      position: relative;
      width: 100%;
      height: var(--card-h);

      .card__image-wrapper {
        border-radius: var(--md-radius);
        overflow: hidden;
        height: 100%;
        width: 100%;
        transition: all var(--card-transition-time);
        outline: solid var(--stroke-w) rgb(var(--c-stroke));
        background-color: rgb(var(--c-stroke));
        box-shadow: 0px 6px 10px -8px black;

        .card__image-overlay {
          position: absolute;
          width: 100%;
          border-radius: var(--card-radius);
          height: 100%;
          transition: background-color var(--card-transition-time);
          background-color: rgb(var(--c-bg) / 0.25);
          z-index: 1;
        }
      }
      .card__text {
        position: absolute;
        right: 0;
        bottom: 1.5rem;
        color: rgb(var(--c-fg));
        background-color: var(--c-pill-bg);
        padding: 1rem;
        margin: 0;
        border-radius: var(--sm-radius);
        text-align: right;
        z-index: 1;
        opacity: 0;
        outline: solid var(--stroke-w) rgb(var(--c-stroke));

        backdrop-filter: blur(10px);
        transform: translateX(var(--card-offset));
        pointer-events: none;

        .card__text--title {
          font-size: 1.4rem;
          font-weight: 800;
        }
        .card__text--subtitle {
          font-size: 0.75rem;
          text-transform: uppercase;
          font-weight: 700;
          letter-spacing: 0.06rem;
        }

        transition:
          opacity var(--card-transition-time),
          color var(--card-transition-time),
          background-color var(--card-transition-time),
          border var(--card-transition-time);
      }

      &:hover,
      &:focus-visible {
        .card__text {
          opacity: 1;
        }
        .card__image-wrapper {
          transform: translate(calc(var(--card-offset) * -1));

          .card__image-overlay {
            background-color: rgb(var(--c-bg) / 0);
          }
        }
      }
    }
  }

  body.lightmode .featured__projects-wrapper .card .card__image-wrapper {
    box-shadow: 8px 8px 0 2px rgb(var(--c-stroke));
  }

  @media screen and (width <= 800px) {
    .featured .featured__title {
      margin-left: 0;
    }
  }

  @media screen and (pointer: coarse), screen and (hover: none) {
    .featured__projects-wrapper .card {
      .card__text {
        opacity: 1;
      }
      .card__image-wrapper {
        transform: translate(calc(var(--card-offset) * -1));

        .card__image-overlay {
          background-color: rgb(var(--c-bg), 0);
        }
      }
    }
  }
</style>
