---
export interface Props {
  classes?: string;
  show?: boolean;
}

const { classes, show = true } = Astro.props as Props;
---

<button
  class:list={["modeswitch", { showfloat: show }, classes]}
  id="modeswitch--float"
  aria-label="Modeswitch Button"
  data-umami-event="Floating Modeswitch"
>
  <div class="modeswitch__slider">
    <div class="modeswitch__slidee"></div>
  </div>
</button>

<style lang="scss">
  .modeswitch {
    position: fixed;
    width: var(--float-modeswitch-size);
    height: var(--float-modeswitch-size);
    bottom: var(--content-px);
    right: var(--content-px);
    opacity: 0;
    border-radius: 999rem;
    background-color: var(--c-pill-bg);
    backdrop-filter: blur(10px);
    cursor: pointer;
    outline: solid var(--stroke-w) rgb(var(--c-stroke));
    pointer-events: none;

    transition:
      box-shadow var(--hover-transition),
      outline var(--modeswitch-transition-time),
      background-color var(--modeswitch-transition-time),
      transform 200ms,
      opacity var(--modeswitch-transition-time);
    z-index: 999;

    &:hover {
      transform: scale(1.03);
      background-color: rgb(var(--c-bg));
    }
  }

  .modeswitch__slider {
    position: absolute;
    cursor: pointer;
    top: 50%;
    left: 50%;
    width: var(--float-modeswitch-w);
    height: var(--float-modeswitch-h);
    transform: translate(-50%, -50%);
    border-radius: 999rem;
    outline: solid var(--stroke-w) rgb(var(--c-stroke));
    background-color: rgb(var(--clr-wb-light) / 0.2);
    transition: var(--modeswitch-transition-time);

    .modeswitch__slidee {
      position: absolute;
      transform-origin: center;
      transform: translate(-50%, 0%) rotate(0deg);
      border-radius: 999rem;
      background-color: rgb(var(--clr-wb-light));
      height: calc(100% - var(--float-modeswitch-slider-dist));
      width: calc(
        var(--float-modeswitch-h) - var(--float-modeswitch-slider-dist)
      );
      top: calc(var(--float-modeswitch-slider-dist) / 2);
      left: calc(var(--float-modeswitch-h) / 2);
      outline: solid var(--stroke-w) rgb(var(--c-stroke));
      transition: var(--modeswitch-transition-time);
    }
  }

  body.lightmode .modeswitch {
    box-shadow: 5px 5px 0 2px rgb(var(--c-stroke));

    .modeswitch__slider .modeswitch__slidee {
      left: calc(var(--float-modeswitch-w) - var(--float-modeswitch-h) / 2);
    }

    &:hover {
      box-shadow: 8px 8px 0 2px rgb(var(--c-stroke));
    }
  }

  .showfloat {
    opacity: 1;
    pointer-events: auto;
  }

  @media only screen and (width <= 800px) {
    .modeswitch {
      bottom: calc(var(--content-px) * 2);
    }
  }
</style>
